{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = require('lodash.clonedeep');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar createPlotlyComponent = function createPlotlyComponent(plotlyInstance) {\n  var _class, _temp;\n\n  return _temp = _class = function (_React$Component) {\n    _inherits(Plotly, _React$Component);\n\n    function Plotly() {\n      _classCallCheck(this, Plotly);\n\n      return _possibleConstructorReturn(this, (Plotly.__proto__ || Object.getPrototypeOf(Plotly)).apply(this, arguments));\n    }\n\n    _createClass(Plotly, [{\n      key: 'attachListeners',\n      value: function attachListeners() {\n        if (this.props.onClick) this.container.on('plotly_click', this.props.onClick);\n        if (this.props.onBeforeHover) this.container.on('plotly_beforehover', this.props.onBeforeHover);\n        if (this.props.onHover) this.container.on('plotly_hover', this.props.onHover);\n        if (this.props.onUnHover) this.container.on('plotly_unhover', this.props.onUnHover);\n        if (this.props.onSelected) this.container.on('plotly_selected', this.props.onSelected);\n\n        if (this.props.onRelayout) {\n          this.container.on('plotly_relayout', this.props.onRelayout);\n        }\n      }\n    }, {\n      key: 'shouldComponentUpdate',\n      value: function shouldComponentUpdate(nextProps) {\n        //TODO logic for detecting change in props\n        return true;\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        var _props = this.props,\n            data = _props.data,\n            layout = _props.layout,\n            config = _props.config;\n        plotlyInstance.newPlot(this.container, data, (0, _lodash2.default)(layout), config); //We clone the layout as plotly mutates it.\n\n        this.attachListeners();\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate(prevProps) {\n        //TODO use minimal update for given changes\n        if (prevProps.data !== this.props.data || prevProps.layout !== this.props.layout || prevProps.config !== this.props.config) {\n          var _props2 = this.props,\n              data = _props2.data,\n              layout = _props2.layout,\n              config = _props2.config;\n          plotlyInstance.newPlot(this.container, data, (0, _lodash2.default)(layout), config); //We clone the layout as plotly mutates it.\n\n          this.attachListeners();\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        plotlyInstance.purge(this.container);\n      }\n    }, {\n      key: 'resize',\n      value: function resize() {\n        plotlyInstance.Plots.resize(this.container);\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this2 = this;\n\n        var _props3 = this.props,\n            data = _props3.data,\n            layout = _props3.layout,\n            config = _props3.config,\n            other = _objectWithoutProperties(_props3, ['data', 'layout', 'config']); //Remove props that would cause React to warn for unknown props.\n\n\n        delete other.onClick;\n        delete other.onBeforeHover;\n        delete other.onHover;\n        delete other.onUnHover;\n        delete other.onSelected;\n        delete other.onRelayout;\n        return _react2.default.createElement('div', _extends({}, other, {\n          ref: function ref(node) {\n            return _this2.container = node;\n          }\n        }));\n      }\n    }]);\n\n    return Plotly;\n  }(_react2.default.Component), _class.propTypes = {\n    data: _propTypes2.default.array,\n    layout: _propTypes2.default.object,\n    config: _propTypes2.default.object,\n    onClick: _propTypes2.default.func,\n    onBeforeHover: _propTypes2.default.func,\n    onHover: _propTypes2.default.func,\n    onUnHover: _propTypes2.default.func,\n    onSelected: _propTypes2.default.func,\n    onRelayout: _propTypes2.default.func\n  }, _temp;\n};\n\nexports.default = createPlotlyComponent;","map":null,"metadata":{},"sourceType":"script"}